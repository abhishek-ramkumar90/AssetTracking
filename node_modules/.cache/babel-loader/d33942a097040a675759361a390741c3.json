{"ast":null,"code":"/**\r\n * DevExtreme (viz/series/points/range_bar_point.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar noop = require(\"../../../core/utils/common\").noop;\n\nvar extend = require(\"../../../core/utils/extend\").extend;\n\nvar barPoint = require(\"./bar_point\");\n\nvar rangeSymbolPointMethods = require(\"./range_symbol_point\");\n\nvar _extend = extend;\nmodule.exports = _extend({}, barPoint, {\n  deleteLabel: rangeSymbolPointMethods.deleteLabel,\n  _getFormatObject: rangeSymbolPointMethods._getFormatObject,\n  clearVisibility: function () {\n    var graphic = this.graphic;\n\n    if (graphic && graphic.attr(\"visibility\")) {\n      graphic.attr({\n        visibility: null\n      });\n    }\n  },\n  setInvisibility: function () {\n    var graphic = this.graphic;\n\n    if (graphic && \"hidden\" !== graphic.attr(\"visibility\")) {\n      graphic.attr({\n        visibility: \"hidden\"\n      });\n    }\n\n    this._topLabel.draw(false);\n\n    this._bottomLabel.draw(false);\n  },\n  getTooltipParams: function (location) {\n    var that = this;\n    var edgeLocation = \"edge\" === location;\n    var x;\n    var y;\n\n    if (that._options.rotated) {\n      x = edgeLocation ? that.x + that.width : that.x + that.width / 2;\n      y = that.y + that.height / 2;\n    } else {\n      x = that.x + that.width / 2;\n      y = edgeLocation ? that.y : that.y + that.height / 2;\n    }\n\n    return {\n      x: x,\n      y: y,\n      offset: 0\n    };\n  },\n  _translate: function () {\n    var that = this;\n    var barMethods = barPoint;\n\n    barMethods._translate.call(that);\n\n    if (that._options.rotated) {\n      that.width = that.width || 1;\n    } else {\n      that.height = that.height || 1;\n    }\n  },\n  hasCoords: rangeSymbolPointMethods.hasCoords,\n  _updateData: rangeSymbolPointMethods._updateData,\n  _getLabelPosition: rangeSymbolPointMethods._getLabelPosition,\n  _getLabelMinFormatObject: rangeSymbolPointMethods._getLabelMinFormatObject,\n  _updateLabelData: rangeSymbolPointMethods._updateLabelData,\n  _updateLabelOptions: rangeSymbolPointMethods._updateLabelOptions,\n  getCrosshairData: rangeSymbolPointMethods.getCrosshairData,\n  _createLabel: rangeSymbolPointMethods._createLabel,\n  _checkOverlay: rangeSymbolPointMethods._checkOverlay,\n  _checkLabelsOverlay: rangeSymbolPointMethods._checkLabelsOverlay,\n  _getOverlayCorrections: rangeSymbolPointMethods._getOverlayCorrections,\n  _drawLabel: rangeSymbolPointMethods._drawLabel,\n  _getLabelCoords: rangeSymbolPointMethods._getLabelCoords,\n  getLabel: rangeSymbolPointMethods.getLabel,\n  getLabels: rangeSymbolPointMethods.getLabels,\n  getBoundingRect: noop,\n  getMinValue: rangeSymbolPointMethods.getMinValue,\n  getMaxValue: rangeSymbolPointMethods.getMaxValue\n});","map":null,"metadata":{},"sourceType":"script"}