{"ast":null,"code":"/**\r\n * DevExtreme (exporter/excel/excel.number_format_helper.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _type = require(\"../../core/utils/type\");\n\nvar _excel = require(\"./excel.tag_helper\");\n\nvar _excel2 = _interopRequireDefault(_excel);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar numberFormatHelper = {\n  ID_PROPERTY_NAME: \"id\",\n  tryCreateTag: function (sourceObj) {\n    var result = null;\n\n    if (\"string\" === typeof sourceObj) {\n      result = {\n        formatCode: sourceObj\n      };\n\n      if (numberFormatHelper.isEmpty(result)) {\n        result = null;\n      }\n    }\n\n    return result;\n  },\n  areEqual: function (leftTag, rightTag) {\n    return numberFormatHelper.isEmpty(leftTag) && numberFormatHelper.isEmpty(rightTag) || (0, _type.isDefined)(leftTag) && (0, _type.isDefined)(rightTag) && leftTag.formatCode === rightTag.formatCode;\n  },\n  isEmpty: function (tag) {\n    return !(0, _type.isDefined)(tag) || !(0, _type.isDefined)(tag.formatCode) || \"\" === tag.formatCode;\n  },\n  toXml: function (tag) {\n    return _excel2.default.toXml(\"numFmt\", {\n      numFmtId: tag[numberFormatHelper.ID_PROPERTY_NAME],\n      formatCode: tag.formatCode\n    });\n  }\n};\nexports.default = numberFormatHelper;","map":null,"metadata":{},"sourceType":"script"}