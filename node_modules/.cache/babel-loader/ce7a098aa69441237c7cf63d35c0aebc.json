{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Circle = function (_Component) {\n  _inherits(Circle, _Component);\n\n  function Circle() {\n    _classCallCheck(this, Circle);\n\n    return _possibleConstructorReturn(this, (Circle.__proto__ || Object.getPrototypeOf(Circle)).apply(this, arguments));\n  }\n\n  _createClass(Circle, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var ctx = _reactDom2.default.findDOMNode(this).getContext('2d');\n\n      var radius = (this.props.size - 10) / 2; //this.drawCircle(ctx,'#efefef', 10, 100 / 100,radius,this.props.size);\n\n      this.drawAnimatedCircle(ctx, this.props.color, 10, this.props.children, radius, 0, this.props.size);\n    } // drawCircle(ctx,color, lineWidth, percent,radius,size) {\n    //   percent = Math.min(Math.max(0, percent || 1), 1);\n    //   ctx.beginPath();\n    //   ctx.arc(size/2,size/2, radius, 0, Math.PI * 2 * percent, false);\n    //   ctx.strokeStyle = color;\n    //   ctx.lineWidth = lineWidth;\n    //   ctx.stroke();\n    // }\n\n  }, {\n    key: 'drawAnimatedCircle',\n    value: function drawAnimatedCircle(ctx, color, lineWidth, percent, radius, curPerc, size) {\n      var _this2 = this;\n\n      ctx.clearRect(0, 0, size, size);\n      this.drawCircleArc(ctx, color, lineWidth, curPerc, radius, size);\n      curPerc++;\n\n      if (curPerc <= percent) {\n        requestAnimationFrame(function () {\n          _this2.drawAnimatedCircle(ctx, color, lineWidth, percent, radius, curPerc, size);\n        });\n      }\n    }\n  }, {\n    key: 'drawCircleArc',\n    value: function drawCircleArc(ctx, color, lineWidth, curr, radius, size) {\n      var startAngle = 0;\n      var endAngle = curr * 2 * Math.PI / 100;\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = color;\n      ctx.beginPath();\n      ctx.arc(size / 2, size / 2, radius, startAngle, endAngle, false);\n      ctx.stroke();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var canvasStyle = {\n        'display': 'block',\n        'position': 'absolute',\n        'top': 0,\n        'left': 0\n      };\n      return _react2.default.createElement('canvas', {\n        width: this.props.size,\n        height: this.props.size,\n        style: canvasStyle\n      });\n    }\n  }]);\n\n  return Circle;\n}(_react.Component);\n\nexports.default = Circle;","map":null,"metadata":{},"sourceType":"script"}