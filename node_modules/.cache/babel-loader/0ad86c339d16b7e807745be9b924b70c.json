{"ast":null,"code":"/**\r\n * DevExtreme (viz/core/helpers.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _extend = require(\"../../core/utils/extend\").extend;\n\nvar windowUtils = require(\"../../core/utils/window\");\n\nvar noop = require(\"../../core/utils/common\").noop;\n\nvar isServerSide = !windowUtils.hasWindow();\n\nfunction Flags() {\n  this.reset();\n}\n\nFlags.prototype = {\n  constructor: Flags,\n  add: function (codes) {\n    var i;\n    var ii = codes.length;\n    var flags = this._flags;\n\n    for (i = 0; i < ii; ++i) {\n      flags[codes[i]] = 1;\n    }\n\n    this._k += ii;\n  },\n  has: function (code) {\n    return this._flags[code] > 0;\n  },\n  count: function () {\n    return this._k;\n  },\n  reset: function () {\n    this._flags = {};\n    this._k = 0;\n  }\n};\n\nfunction combineMaps(baseMap, thisMap) {\n  return baseMap !== thisMap ? _extend({}, baseMap, thisMap) : _extend({}, baseMap);\n}\n\nfunction combineLists(baseList, thisList) {\n  return baseList !== thisList ? baseList.concat(thisList) : baseList.slice();\n}\n\nfunction buildTotalChanges(proto) {\n  proto._totalChangesOrder = proto._optionChangesOrder.concat(proto._layoutChangesOrder, proto._customChangesOrder);\n}\n\nfunction addChange(settings) {\n  var proto = this.prototype;\n  var code = settings.code;\n  proto[\"_change_\" + code] = settings.handler;\n\n  if (settings.isThemeDependent) {\n    proto._themeDependentChanges.push(code);\n  }\n\n  if (settings.option) {\n    proto._optionChangesMap[settings.option] = code;\n  }\n\n  (settings.isOptionChange ? proto._optionChangesOrder : proto._customChangesOrder).push(code);\n  buildTotalChanges(proto);\n}\n\nfunction createChainExecutor() {\n  var executeChain = function executeChain() {\n    var i;\n    var ii = executeChain._chain.length;\n    var result;\n\n    for (i = 0; i < ii; ++i) {\n      result = executeChain._chain[i].apply(this, arguments);\n    }\n\n    return result;\n  };\n\n  executeChain._chain = [];\n\n  executeChain.add = function (item) {\n    executeChain._chain.push(item);\n  };\n\n  executeChain.copy = function (executor) {\n    executeChain._chain = executor._chain.slice();\n  };\n\n  return executeChain;\n}\n\nfunction expand(target, name, expander) {\n  var current = target[name];\n\n  if (!current) {\n    current = expander;\n  } else {\n    if (!current.add) {\n      current = createChainExecutor();\n      current.add(target[name]);\n      current.add(expander);\n    } else {\n      if (false === Object.prototype.hasOwnProperty.call(target, name)) {\n        current = createChainExecutor();\n        current.copy(target[name]);\n      }\n\n      current.add(expander);\n    }\n  }\n\n  target[name] = current;\n}\n\nfunction addPlugin(plugin) {\n  var proto = this.prototype;\n\n  proto._plugins.push(plugin);\n\n  plugin.fontFields && proto._fontFields.push.apply(proto._fontFields, plugin.fontFields);\n\n  if (plugin.members) {\n    _extend(this.prototype, plugin.members);\n  }\n\n  if (plugin.customize) {\n    plugin.customize(this);\n  }\n\n  if (plugin.extenders) {\n    Object.keys(plugin.extenders).forEach(function (key) {\n      var func = plugin.extenders[key];\n      expand(proto, key, func);\n    }, this);\n  }\n}\n\nexports.replaceInherit = isServerSide ? function (widget) {\n  var _inherit = widget.inherit;\n\n  widget.inherit = function () {\n    var result = _inherit.apply(this, arguments);\n\n    var proto = result.prototype;\n    [\"_plugins\", \"_eventsMap\", \"_initialChanges\", \"_themeDependentChanges\", \"_optionChangesMap\", \"_optionChangesOrder\", \"_layoutChangesOrder\", \"_customChangesOrder\", \"_totalChangesOrder\"].forEach(function (key) {\n      proto[key] = {};\n    });\n    result.addPlugin = noop;\n    return result;\n  };\n\n  widget.addChange = noop;\n  widget.addPlugin = noop;\n} : function (widget) {\n  var _inherit = widget.inherit;\n\n  widget.inherit = function () {\n    var proto = this.prototype;\n    var plugins = proto._plugins;\n    var fontFields = proto._fontFields;\n    var eventsMap = proto._eventsMap;\n    var initialChanges = proto._initialChanges;\n    var themeDependentChanges = proto._themeDependentChanges;\n    var optionChangesMap = proto._optionChangesMap;\n    var partialOptionChangesMap = proto._partialOptionChangesMap;\n    var partialOptionChangesPath = proto._partialOptionChangesPath;\n    var optionChangesOrder = proto._optionChangesOrder;\n    var layoutChangesOrder = proto._layoutChangesOrder;\n    var customChangesOrder = proto._customChangesOrder;\n\n    var result = _inherit.apply(this, arguments);\n\n    proto = result.prototype;\n    proto._plugins = combineLists(plugins, proto._plugins);\n    proto._fontFields = combineLists(fontFields, proto._fontFields);\n    proto._eventsMap = combineMaps(eventsMap, proto._eventsMap);\n    proto._initialChanges = combineLists(initialChanges, proto._initialChanges);\n    proto._themeDependentChanges = combineLists(themeDependentChanges, proto._themeDependentChanges);\n    proto._optionChangesMap = combineMaps(optionChangesMap, proto._optionChangesMap);\n    proto._partialOptionChangesMap = combineMaps(partialOptionChangesMap, proto._partialOptionChangesMap);\n    proto._partialOptionChangesPath = combineMaps(partialOptionChangesPath, proto._partialOptionChangesPath);\n    proto._optionChangesOrder = combineLists(optionChangesOrder, proto._optionChangesOrder);\n    proto._layoutChangesOrder = combineLists(layoutChangesOrder, proto._layoutChangesOrder);\n    proto._customChangesOrder = combineLists(customChangesOrder, proto._customChangesOrder);\n    buildTotalChanges(proto);\n    result.addPlugin = addPlugin;\n    return result;\n  };\n\n  widget.prototype._plugins = [];\n  widget.prototype._fontFields = [];\n  widget.addChange = addChange;\n  widget.addPlugin = addPlugin;\n};\n\nexports.changes = function () {\n  return new Flags();\n};\n\nexports.expand = expand;","map":null,"metadata":{},"sourceType":"script"}