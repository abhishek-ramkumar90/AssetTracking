{"ast":null,"code":"/**\r\n * DevExtreme (core/events_mixin.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar DefaultEventsStrategy = require(\"./events_strategy\");\n\nvar each = require(\"./utils/iterator\").each;\n\nvar isPlainObject = require(\"./utils/type\").isPlainObject;\n\nmodule.exports = {\n  ctor: function () {\n    this._events = {};\n    this.setEventsStrategy(new DefaultEventsStrategy(this));\n  },\n  setEventsStrategy: function (strategy) {\n    if (\"function\" === typeof strategy) {\n      strategy = strategy(this);\n    }\n\n    this._eventsStrategy = strategy;\n  },\n  hasEvent: function (eventName) {\n    return this._eventsStrategy.hasEvent(eventName);\n  },\n  fireEvent: function (eventName, eventArgs) {\n    this._eventsStrategy.fireEvent(eventName, eventArgs);\n\n    return this;\n  },\n  on: function (eventName, eventHandler) {\n    if (isPlainObject(eventName)) {\n      each(eventName, function (e, h) {\n        this.on(e, h);\n      }.bind(this));\n    } else {\n      this._eventsStrategy.on(eventName, eventHandler);\n    }\n\n    return this;\n  },\n  off: function (eventName, eventHandler) {\n    this._eventsStrategy.off(eventName, eventHandler);\n\n    return this;\n  },\n  _disposeEvents: function () {\n    this._eventsStrategy.dispose();\n  }\n};","map":null,"metadata":{},"sourceType":"script"}