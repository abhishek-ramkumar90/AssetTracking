{"ast":null,"code":"/**\r\n * DevExtreme (events/pointer/base.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar eventsEngine = require(\"../../events/core/events_engine\");\n\nvar browser = require(\"../../core/utils/browser\");\n\nvar domAdapter = require(\"../../core/dom_adapter\");\n\nvar Class = require(\"../../core/class\");\n\nvar eventUtils = require(\"../utils\");\n\nvar POINTER_EVENTS_NAMESPACE = \"dxPointerEvents\";\nvar BaseStrategy = Class.inherit({\n  ctor: function (eventName, originalEvents) {\n    this._eventName = eventName;\n    this._originalEvents = eventUtils.addNamespace(originalEvents, POINTER_EVENTS_NAMESPACE);\n    this._handlerCount = 0;\n    this.noBubble = this._isNoBubble();\n  },\n  _isNoBubble: function () {\n    var eventName = this._eventName;\n    return \"dxpointerenter\" === eventName || \"dxpointerleave\" === eventName;\n  },\n  _handler: function (e) {\n    var delegateTarget = this._getDelegateTarget(e);\n\n    return this._fireEvent({\n      type: this._eventName,\n      pointerType: e.pointerType || eventUtils.eventSource(e),\n      originalEvent: e,\n      delegateTarget: delegateTarget,\n      timeStamp: browser.mozilla ? new Date().getTime() : e.timeStamp\n    });\n  },\n  _getDelegateTarget: function (e) {\n    var delegateTarget;\n\n    if (this.noBubble) {\n      delegateTarget = e.delegateTarget;\n    }\n\n    return delegateTarget;\n  },\n  _fireEvent: function (args) {\n    return eventUtils.fireEvent(args);\n  },\n  _setSelector: function (handleObj) {\n    this._selector = this.noBubble && handleObj ? handleObj.selector : null;\n  },\n  _getSelector: function () {\n    return this._selector;\n  },\n  setup: function () {\n    return true;\n  },\n  add: function (element, handleObj) {\n    if (this._handlerCount <= 0 || this.noBubble) {\n      element = this.noBubble ? element : domAdapter.getDocument();\n\n      this._setSelector(handleObj);\n\n      var that = this;\n      eventsEngine.on(element, this._originalEvents, this._getSelector(), function (e) {\n        that._handler(e);\n      });\n    }\n\n    if (!this.noBubble) {\n      this._handlerCount++;\n    }\n  },\n  remove: function (handleObj) {\n    this._setSelector(handleObj);\n\n    if (!this.noBubble) {\n      this._handlerCount--;\n    }\n  },\n  teardown: function (element) {\n    if (this._handlerCount && !this.noBubble) {\n      return;\n    }\n\n    element = this.noBubble ? element : domAdapter.getDocument();\n\n    if (this._originalEvents !== \".\" + POINTER_EVENTS_NAMESPACE) {\n      eventsEngine.off(element, this._originalEvents, this._getSelector());\n    }\n  },\n  dispose: function (element) {\n    element = this.noBubble ? element : domAdapter.getDocument();\n    eventsEngine.off(element, this._originalEvents);\n  }\n});\nmodule.exports = BaseStrategy;","map":null,"metadata":{},"sourceType":"script"}