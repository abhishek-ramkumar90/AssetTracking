{"ast":null,"code":"/**\r\n * DevExtreme (events/hover.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar eventsEngine = require(\"../events/core/events_engine\");\n\nvar dataUtils = require(\"../core/element_data\");\n\nvar Class = require(\"../core/class\");\n\nvar devices = require(\"../core/devices\");\n\nvar registerEvent = require(\"./core/event_registrator\");\n\nvar eventUtils = require(\"./utils\");\n\nvar pointerEvents = require(\"./pointer\");\n\nvar HOVERSTART_NAMESPACE = \"dxHoverStart\";\nvar HOVERSTART = \"dxhoverstart\";\nvar POINTERENTER_NAMESPACED_EVENT_NAME = eventUtils.addNamespace(pointerEvents.enter, HOVERSTART_NAMESPACE);\nvar HOVEREND_NAMESPACE = \"dxHoverEnd\";\nvar HOVEREND = \"dxhoverend\";\nvar POINTERLEAVE_NAMESPACED_EVENT_NAME = eventUtils.addNamespace(pointerEvents.leave, HOVEREND_NAMESPACE);\nvar Hover = Class.inherit({\n  noBubble: true,\n  ctor: function () {\n    this._handlerArrayKeyPath = this._eventNamespace + \"_HandlerStore\";\n  },\n  setup: function (element) {\n    dataUtils.data(element, this._handlerArrayKeyPath, {});\n  },\n  add: function (element, handleObj) {\n    var that = this;\n\n    var handler = function (e) {\n      that._handler(e);\n    };\n\n    eventsEngine.on(element, this._originalEventName, handleObj.selector, handler);\n    dataUtils.data(element, this._handlerArrayKeyPath)[handleObj.guid] = handler;\n  },\n  _handler: function (e) {\n    if (eventUtils.isTouchEvent(e) || devices.isSimulator()) {\n      return;\n    }\n\n    eventUtils.fireEvent({\n      type: this._eventName,\n      originalEvent: e,\n      delegateTarget: e.delegateTarget\n    });\n  },\n  remove: function (element, handleObj) {\n    var handler = dataUtils.data(element, this._handlerArrayKeyPath)[handleObj.guid];\n    eventsEngine.off(element, this._originalEventName, handleObj.selector, handler);\n  },\n  teardown: function (element) {\n    dataUtils.removeData(element, this._handlerArrayKeyPath);\n  }\n});\nvar HoverStart = Hover.inherit({\n  ctor: function () {\n    this._eventNamespace = HOVERSTART_NAMESPACE;\n    this._eventName = HOVERSTART;\n    this._originalEventName = POINTERENTER_NAMESPACED_EVENT_NAME;\n    this.callBase();\n  },\n  _handler: function (e) {\n    var pointers = e.pointers || [];\n\n    if (!pointers.length) {\n      this.callBase(e);\n    }\n  }\n});\nvar HoverEnd = Hover.inherit({\n  ctor: function () {\n    this._eventNamespace = HOVEREND_NAMESPACE;\n    this._eventName = HOVEREND;\n    this._originalEventName = POINTERLEAVE_NAMESPACED_EVENT_NAME;\n    this.callBase();\n  }\n});\nregisterEvent(HOVERSTART, new HoverStart());\nregisterEvent(HOVEREND, new HoverEnd());\nexports.start = HOVERSTART;\nexports.end = HOVEREND;","map":null,"metadata":{},"sourceType":"script"}