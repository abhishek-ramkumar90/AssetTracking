{"ast":null,"code":"import _defineProperty from \"/Users/abhishekramkumar/Desktop/ReactProject/Endless-react-admin-template/starter_kit/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_COSTOMIZER, ADD_LAYOUT, ADD_SIDEBAR_TYPES, ADD_SIDEBAR_SETTINGS, ADD_COLOR, ADD_MIXlAYOUT } from \"../constant/actionTypes\";\nimport ConfigDB from '../data/customizer/config';\nconst initial_state = {\n  customizer: ConfigDB.data,\n  configData: {},\n  layout: 'ltr',\n  sidebar_types: {},\n  settings: '',\n  color: {},\n  mix_layout: ''\n};\nexport default ((state = initial_state, action) => {\n  switch (action.type) {\n    case ADD_COSTOMIZER:\n      return _objectSpread({}, state, {\n        loading: false,\n        customizer: ConfigDB.data\n      });\n\n    case ADD_LAYOUT:\n      state.customizer.settings.layout_type = action.payload;\n      const layoutUpdate = state.customizer.settings.layout_type;\n      return _objectSpread({}, state, {\n        loading: true,\n        layout: layoutUpdate\n      });\n\n    case ADD_SIDEBAR_TYPES:\n      state.customizer.settings.sidebar = action.payload;\n      const sidebarTypeUpdate = state.customizer.settings.sidebar;\n      return _objectSpread({}, state, {\n        loading: true,\n        sidebar_types: sidebarTypeUpdate\n      });\n\n    case ADD_SIDEBAR_SETTINGS:\n      state.customizer.settings.sidebar_setting = action.payload;\n      const settingsUpdate = state.customizer.settings.sidebar_setting;\n      return _objectSpread({}, state, {\n        loading: true,\n        settings: settingsUpdate\n      });\n\n    case ADD_COLOR:\n      const colors = action.payload;\n      state.customizer.color.primary_color = colors.primary_color;\n      state.customizer.color.secondary_color = colors.secondary_color;\n      state.customizer.color.color = colors.color;\n      state.customizer.color.layout_version = colors.layout_version;\n      return _objectSpread({}, state, {\n        color: colors,\n        loading: true\n      });\n\n    case ADD_MIXlAYOUT:\n      const mix_layout = action.payload;\n      state.customizer.color.mix_layout = mix_layout;\n      return _objectSpread({}, state, {\n        mix_layout: mix_layout,\n        loading: true\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n});","map":{"version":3,"sources":["/Users/abhishekramkumar/Desktop/ReactProject/Endless-react-admin-template/starter_kit/src/reducers/customizer.reducer.js"],"names":["ADD_COSTOMIZER","ADD_LAYOUT","ADD_SIDEBAR_TYPES","ADD_SIDEBAR_SETTINGS","ADD_COLOR","ADD_MIXlAYOUT","ConfigDB","initial_state","customizer","data","configData","layout","sidebar_types","settings","color","mix_layout","state","action","type","loading","layout_type","payload","layoutUpdate","sidebar","sidebarTypeUpdate","sidebar_setting","settingsUpdate","colors","primary_color","secondary_color","layout_version"],"mappings":";;;;;;AAAA,SAAQA,cAAR,EAAyBC,UAAzB,EAAqCC,iBAArC,EAAwDC,oBAAxD,EAA8EC,SAA9E,EAAyFC,aAAzF,QAA6G,yBAA7G;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,UAAU,EAAGF,QAAQ,CAACG,IADJ;AAElBC,EAAAA,UAAU,EAAC,EAFO;AAGlBC,EAAAA,MAAM,EAAC,KAHW;AAIlBC,EAAAA,aAAa,EAAC,EAJI;AAKlBC,EAAAA,QAAQ,EAAC,EALS;AAMlBC,EAAAA,KAAK,EAAC,EANY;AAOlBC,EAAAA,UAAU,EAAC;AAPO,CAAtB;AAUA,gBAAe,CAACC,KAAK,GAAGT,aAAT,EAAwBU,MAAxB,KAAmC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKlB,cAAL;AACI,+BAAYgB,KAAZ;AAAmBG,QAAAA,OAAO,EAAE,KAA5B;AAAmCX,QAAAA,UAAU,EAACF,QAAQ,CAACG;AAAvD;;AAEJ,SAAKR,UAAL;AACIe,MAAAA,KAAK,CAACR,UAAN,CAAiBK,QAAjB,CAA0BO,WAA1B,GAAwCH,MAAM,CAACI,OAA/C;AACA,YAAMC,YAAY,GAAGN,KAAK,CAACR,UAAN,CAAiBK,QAAjB,CAA0BO,WAA/C;AACA,+BAAaJ,KAAb;AAAoBG,QAAAA,OAAO,EAAE,IAA7B;AAAmCR,QAAAA,MAAM,EAAGW;AAA5C;;AAEJ,SAAKpB,iBAAL;AACIc,MAAAA,KAAK,CAACR,UAAN,CAAiBK,QAAjB,CAA0BU,OAA1B,GAAkCN,MAAM,CAACI,OAAzC;AACA,YAAMG,iBAAiB,GAAGR,KAAK,CAACR,UAAN,CAAiBK,QAAjB,CAA0BU,OAApD;AAEA,+BAAaP,KAAb;AAAoBG,QAAAA,OAAO,EAAE,IAA7B;AAAmCP,QAAAA,aAAa,EAACY;AAAjD;;AAEJ,SAAKrB,oBAAL;AACIa,MAAAA,KAAK,CAACR,UAAN,CAAiBK,QAAjB,CAA0BY,eAA1B,GAA0CR,MAAM,CAACI,OAAjD;AACA,YAAMK,cAAc,GAAGV,KAAK,CAACR,UAAN,CAAiBK,QAAjB,CAA0BY,eAAjD;AACA,+BAAaT,KAAb;AAAoBG,QAAAA,OAAO,EAAE,IAA7B;AAAoCN,QAAAA,QAAQ,EAAEa;AAA9C;;AAEJ,SAAKtB,SAAL;AACI,YAAMuB,MAAM,GAAGV,MAAM,CAACI,OAAtB;AACAL,MAAAA,KAAK,CAACR,UAAN,CAAiBM,KAAjB,CAAuBc,aAAvB,GAAuCD,MAAM,CAACC,aAA9C;AACAZ,MAAAA,KAAK,CAACR,UAAN,CAAiBM,KAAjB,CAAuBe,eAAvB,GAAyCF,MAAM,CAACE,eAAhD;AACAb,MAAAA,KAAK,CAACR,UAAN,CAAiBM,KAAjB,CAAuBA,KAAvB,GAA+Ba,MAAM,CAACb,KAAtC;AACAE,MAAAA,KAAK,CAACR,UAAN,CAAiBM,KAAjB,CAAuBgB,cAAvB,GAAwCH,MAAM,CAACG,cAA/C;AAEA,+BAAad,KAAb;AAAoBF,QAAAA,KAAK,EAAEa,MAA3B;AAAmCR,QAAAA,OAAO,EAAE;AAA5C;;AAEJ,SAAKd,aAAL;AACI,YAAMU,UAAU,GAAGE,MAAM,CAACI,OAA1B;AACAL,MAAAA,KAAK,CAACR,UAAN,CAAiBM,KAAjB,CAAuBC,UAAvB,GAAoCA,UAApC;AAEA,+BAAaC,KAAb;AAAoBD,QAAAA,UAAU,EAAEA,UAAhC;AAA4CI,QAAAA,OAAO,EAAE;AAArD;;AAEJ;AAAS,+BAAYH,KAAZ;AApCb;AAsCH,CAvCD","sourcesContent":["import {ADD_COSTOMIZER , ADD_LAYOUT ,ADD_SIDEBAR_TYPES, ADD_SIDEBAR_SETTINGS ,ADD_COLOR ,ADD_MIXlAYOUT} from \"../constant/actionTypes\";\nimport ConfigDB from '../data/customizer/config';\n\nconst initial_state = {\n    customizer : ConfigDB.data,\n    configData:{},\n    layout:'ltr',\n    sidebar_types:{},\n    settings:'',\n    color:{},\n    mix_layout:''\n};\n\nexport default (state = initial_state, action) => {\n    switch (action.type) {\n        \n        case ADD_COSTOMIZER:\n            return { ...state, loading: false, customizer:ConfigDB.data };\n\n        case ADD_LAYOUT:\n            state.customizer.settings.layout_type = action.payload\n            const layoutUpdate = state.customizer.settings.layout_type;\n            return  { ...state, loading: true ,layout : layoutUpdate };\n        \n        case ADD_SIDEBAR_TYPES:\n            state.customizer.settings.sidebar=action.payload\n            const sidebarTypeUpdate = state.customizer.settings.sidebar;\n            \n            return  { ...state, loading: true ,sidebar_types:sidebarTypeUpdate };\n        \n        case ADD_SIDEBAR_SETTINGS:\n            state.customizer.settings.sidebar_setting=action.payload\n            const settingsUpdate = state.customizer.settings.sidebar_setting;\n            return  { ...state, loading: true , settings: settingsUpdate};\n        \n        case ADD_COLOR : \n            const colors = action.payload;\n            state.customizer.color.primary_color = colors.primary_color;\n            state.customizer.color.secondary_color = colors.secondary_color;\n            state.customizer.color.color = colors.color;\n            state.customizer.color.layout_version = colors.layout_version;\n            \n            return  { ...state, color: colors, loading: true };\n        \n        case ADD_MIXlAYOUT:\n            const mix_layout = action.payload\n            state.customizer.color.mix_layout = mix_layout;\n\n            return  { ...state, mix_layout: mix_layout, loading: true };\n\n        default: return { ...state };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}