{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 19.2.7\n * Build date: Thu Mar 26 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar pie_chart_1 = require(\"devextreme/viz/pie_chart\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar component_1 = require(\"./core/component\");\n\nvar nested_option_1 = require(\"./core/nested-option\");\n\nvar PieChart =\n/** @class */\nfunction (_super) {\n  __extends(PieChart, _super);\n\n  function PieChart() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._WidgetClass = pie_chart_1.default;\n    _this._defaults = {\n      defaultLoadingIndicator: \"loadingIndicator\"\n    };\n    _this._expectedChildren = {\n      adaptiveLayout: {\n        optionName: \"adaptiveLayout\",\n        isCollectionItem: false\n      },\n      animation: {\n        optionName: \"animation\",\n        isCollectionItem: false\n      },\n      commonSeriesSettings: {\n        optionName: \"commonSeriesSettings\",\n        isCollectionItem: false\n      },\n      export: {\n        optionName: \"export\",\n        isCollectionItem: false\n      },\n      legend: {\n        optionName: \"legend\",\n        isCollectionItem: false\n      },\n      loadingIndicator: {\n        optionName: \"loadingIndicator\",\n        isCollectionItem: false\n      },\n      margin: {\n        optionName: \"margin\",\n        isCollectionItem: false\n      },\n      pieChartTitle: {\n        optionName: \"title\",\n        isCollectionItem: false\n      },\n      series: {\n        optionName: \"series\",\n        isCollectionItem: true\n      },\n      seriesTemplate: {\n        optionName: \"seriesTemplate\",\n        isCollectionItem: false\n      },\n      size: {\n        optionName: \"size\",\n        isCollectionItem: false\n      },\n      title: {\n        optionName: \"title\",\n        isCollectionItem: false\n      },\n      tooltip: {\n        optionName: \"tooltip\",\n        isCollectionItem: false\n      }\n    };\n    _this._templateProps = [{\n      tmplOption: \"centerTemplate\",\n      render: \"centerRender\",\n      component: \"centerComponent\",\n      keyFn: \"centerKeyFn\"\n    }];\n    return _this;\n  }\n\n  Object.defineProperty(PieChart.prototype, \"instance\", {\n    get: function () {\n      return this._instance;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PieChart;\n}(component_1.Component);\n\nexports.PieChart = PieChart;\nPieChart.propTypes = {\n  adaptiveLayout: PropTypes.object,\n  animation: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  commonSeriesSettings: PropTypes.object,\n  customizeLabel: PropTypes.func,\n  customizePoint: PropTypes.func,\n  dataSource: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n  diameter: PropTypes.number,\n  disabled: PropTypes.bool,\n  elementAttr: PropTypes.object,\n  export: PropTypes.object,\n  innerRadius: PropTypes.number,\n  legend: PropTypes.object,\n  loadingIndicator: PropTypes.object,\n  margin: PropTypes.object,\n  minDiameter: PropTypes.number,\n  onDisposing: PropTypes.func,\n  onDone: PropTypes.func,\n  onDrawn: PropTypes.func,\n  onExported: PropTypes.func,\n  onExporting: PropTypes.func,\n  onFileSaving: PropTypes.func,\n  onIncidentOccurred: PropTypes.func,\n  onInitialized: PropTypes.func,\n  onLegendClick: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  onOptionChanged: PropTypes.func,\n  onPointClick: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  onPointHoverChanged: PropTypes.func,\n  onPointSelectionChanged: PropTypes.func,\n  onTooltipHidden: PropTypes.func,\n  onTooltipShown: PropTypes.func,\n  palette: PropTypes.oneOfType([PropTypes.array, PropTypes.oneOf([\"Bright\", \"Default\", \"Harmony Light\", \"Ocean\", \"Pastel\", \"Soft\", \"Soft Pastel\", \"Vintage\", \"Violet\", \"Carmine\", \"Dark Moon\", \"Dark Violet\", \"Green Mist\", \"Soft Blue\", \"Material\", \"Office\"])]),\n  paletteExtensionMode: PropTypes.oneOf([\"alternate\", \"blend\", \"extrapolate\"]),\n  pathModified: PropTypes.bool,\n  pointSelectionMode: PropTypes.oneOf([\"multiple\", \"single\"]),\n  redrawOnResize: PropTypes.bool,\n  resolveLabelOverlapping: PropTypes.oneOf([\"hide\", \"none\", \"shift\"]),\n  rtlEnabled: PropTypes.bool,\n  segmentsDirection: PropTypes.oneOf([\"anticlockwise\", \"clockwise\"]),\n  series: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  seriesTemplate: PropTypes.object,\n  size: PropTypes.object,\n  sizeGroup: PropTypes.string,\n  startAngle: PropTypes.number,\n  theme: PropTypes.oneOf([\"generic.dark\", \"generic.light\", \"generic.contrast\", \"ios7.default\", \"generic.carmine\", \"generic.darkmoon\", \"generic.darkviolet\", \"generic.greenmist\", \"generic.softblue\", \"material.blue.light\", \"material.lime.light\", \"material.orange.light\", \"material.purple.light\", \"material.teal.light\"]),\n  title: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  tooltip: PropTypes.object,\n  type: PropTypes.oneOf([\"donut\", \"doughnut\", \"pie\"])\n}; // tslint:disable:max-classes-per-file\n// owners:\n// PieChart\n\nvar AdaptiveLayout =\n/** @class */\nfunction (_super) {\n  __extends(AdaptiveLayout, _super);\n\n  function AdaptiveLayout() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AdaptiveLayout.OptionName = \"adaptiveLayout\";\n  return AdaptiveLayout;\n}(nested_option_1.default);\n\nexports.AdaptiveLayout = AdaptiveLayout; // owners:\n// PieChart\n\nvar Animation =\n/** @class */\nfunction (_super) {\n  __extends(Animation, _super);\n\n  function Animation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Animation.OptionName = \"animation\";\n  return Animation;\n}(nested_option_1.default);\n\nexports.Animation = Animation; // owners:\n// Label\n// Tooltip\n\nvar ArgumentFormat =\n/** @class */\nfunction (_super) {\n  __extends(ArgumentFormat, _super);\n\n  function ArgumentFormat() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ArgumentFormat.OptionName = \"argumentFormat\";\n  return ArgumentFormat;\n}(nested_option_1.default);\n\nexports.ArgumentFormat = ArgumentFormat; // owners:\n// CommonSeriesSettings\n// HoverStyle\n// Label\n// SelectionStyle\n// Legend\n// Tooltip\n\nvar Border =\n/** @class */\nfunction (_super) {\n  __extends(Border, _super);\n\n  function Border() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Border.OptionName = \"border\";\n  return Border;\n}(nested_option_1.default);\n\nexports.Border = Border; // owners:\n// PieChart\n\nvar CommonSeriesSettings =\n/** @class */\nfunction (_super) {\n  __extends(CommonSeriesSettings, _super);\n\n  function CommonSeriesSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CommonSeriesSettings.OptionName = \"commonSeriesSettings\";\n  CommonSeriesSettings.ExpectedChildren = {\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    hoverStyle: {\n      optionName: \"hoverStyle\",\n      isCollectionItem: false\n    },\n    label: {\n      optionName: \"label\",\n      isCollectionItem: false\n    },\n    selectionStyle: {\n      optionName: \"selectionStyle\",\n      isCollectionItem: false\n    },\n    seriesBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    smallValuesGrouping: {\n      optionName: \"smallValuesGrouping\",\n      isCollectionItem: false\n    }\n  };\n  return CommonSeriesSettings;\n}(nested_option_1.default);\n\nexports.CommonSeriesSettings = CommonSeriesSettings; // owners:\n// Label\n\nvar Connector =\n/** @class */\nfunction (_super) {\n  __extends(Connector, _super);\n\n  function Connector() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Connector.OptionName = \"connector\";\n  return Connector;\n}(nested_option_1.default);\n\nexports.Connector = Connector; // owners:\n// PieChart\n\nvar Export =\n/** @class */\nfunction (_super) {\n  __extends(Export, _super);\n\n  function Export() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Export.OptionName = \"export\";\n  return Export;\n}(nested_option_1.default);\n\nexports.Export = Export; // owners:\n// Label\n// Legend\n// LegendTitle\n// LegendTitleSubtitle\n// Tooltip\n// LoadingIndicator\n// PieChartTitle\n// PieChartTitleSubtitle\n\nvar Font =\n/** @class */\nfunction (_super) {\n  __extends(Font, _super);\n\n  function Font() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Font.OptionName = \"font\";\n  return Font;\n}(nested_option_1.default);\n\nexports.Font = Font; // owners:\n// Label\n// Tooltip\n\nvar Format =\n/** @class */\nfunction (_super) {\n  __extends(Format, _super);\n\n  function Format() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Format.OptionName = \"format\";\n  return Format;\n}(nested_option_1.default);\n\nexports.Format = Format; // owners:\n// HoverStyle\n// SelectionStyle\n\nvar Hatching =\n/** @class */\nfunction (_super) {\n  __extends(Hatching, _super);\n\n  function Hatching() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Hatching.OptionName = \"hatching\";\n  return Hatching;\n}(nested_option_1.default);\n\nexports.Hatching = Hatching; // owners:\n// CommonSeriesSettings\n\nvar HoverStyle =\n/** @class */\nfunction (_super) {\n  __extends(HoverStyle, _super);\n\n  function HoverStyle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  HoverStyle.OptionName = \"hoverStyle\";\n  HoverStyle.ExpectedChildren = {\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    hatching: {\n      optionName: \"hatching\",\n      isCollectionItem: false\n    },\n    seriesBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    }\n  };\n  return HoverStyle;\n}(nested_option_1.default);\n\nexports.HoverStyle = HoverStyle; // owners:\n// CommonSeriesSettings\n\nvar Label =\n/** @class */\nfunction (_super) {\n  __extends(Label, _super);\n\n  function Label() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Label.OptionName = \"label\";\n  Label.ExpectedChildren = {\n    argumentFormat: {\n      optionName: \"argumentFormat\",\n      isCollectionItem: false\n    },\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    connector: {\n      optionName: \"connector\",\n      isCollectionItem: false\n    },\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    format: {\n      optionName: \"format\",\n      isCollectionItem: false\n    },\n    seriesBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    }\n  };\n  return Label;\n}(nested_option_1.default);\n\nexports.Label = Label; // owners:\n// PieChart\n\nvar Legend =\n/** @class */\nfunction (_super) {\n  __extends(Legend, _super);\n\n  function Legend() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Legend.OptionName = \"legend\";\n  Legend.ExpectedChildren = {\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    legendBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    legendTitle: {\n      optionName: \"title\",\n      isCollectionItem: false\n    },\n    margin: {\n      optionName: \"margin\",\n      isCollectionItem: false\n    },\n    title: {\n      optionName: \"title\",\n      isCollectionItem: false\n    }\n  };\n  Legend.TemplateProps = [{\n    tmplOption: \"markerTemplate\",\n    render: \"markerRender\",\n    component: \"markerComponent\",\n    keyFn: \"markerKeyFn\"\n  }];\n  return Legend;\n}(nested_option_1.default);\n\nexports.Legend = Legend; // owners:\n// Legend\n\nvar LegendBorder =\n/** @class */\nfunction (_super) {\n  __extends(LegendBorder, _super);\n\n  function LegendBorder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LegendBorder.OptionName = \"border\";\n  return LegendBorder;\n}(nested_option_1.default);\n\nexports.LegendBorder = LegendBorder; // owners:\n// Legend\n\nvar LegendTitle =\n/** @class */\nfunction (_super) {\n  __extends(LegendTitle, _super);\n\n  function LegendTitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LegendTitle.OptionName = \"title\";\n  LegendTitle.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    legendTitleSubtitle: {\n      optionName: \"subtitle\",\n      isCollectionItem: false\n    },\n    margin: {\n      optionName: \"margin\",\n      isCollectionItem: false\n    },\n    subtitle: {\n      optionName: \"subtitle\",\n      isCollectionItem: false\n    }\n  };\n  return LegendTitle;\n}(nested_option_1.default);\n\nexports.LegendTitle = LegendTitle; // owners:\n// LegendTitle\n\nvar LegendTitleSubtitle =\n/** @class */\nfunction (_super) {\n  __extends(LegendTitleSubtitle, _super);\n\n  function LegendTitleSubtitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LegendTitleSubtitle.OptionName = \"subtitle\";\n  LegendTitleSubtitle.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    }\n  };\n  return LegendTitleSubtitle;\n}(nested_option_1.default);\n\nexports.LegendTitleSubtitle = LegendTitleSubtitle; // owners:\n// PieChart\n\nvar LoadingIndicator =\n/** @class */\nfunction (_super) {\n  __extends(LoadingIndicator, _super);\n\n  function LoadingIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  LoadingIndicator.OptionName = \"loadingIndicator\";\n  LoadingIndicator.DefaultsProps = {\n    defaultShow: \"show\"\n  };\n  LoadingIndicator.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    }\n  };\n  return LoadingIndicator;\n}(nested_option_1.default);\n\nexports.LoadingIndicator = LoadingIndicator; // owners:\n// Legend\n// LegendTitle\n// PieChart\n// PieChartTitle\n\nvar Margin =\n/** @class */\nfunction (_super) {\n  __extends(Margin, _super);\n\n  function Margin() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Margin.OptionName = \"margin\";\n  return Margin;\n}(nested_option_1.default);\n\nexports.Margin = Margin; // owners:\n// PieChart\n\nvar PieChartTitle =\n/** @class */\nfunction (_super) {\n  __extends(PieChartTitle, _super);\n\n  function PieChartTitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PieChartTitle.OptionName = \"title\";\n  PieChartTitle.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    margin: {\n      optionName: \"margin\",\n      isCollectionItem: false\n    },\n    pieChartTitleSubtitle: {\n      optionName: \"subtitle\",\n      isCollectionItem: false\n    },\n    subtitle: {\n      optionName: \"subtitle\",\n      isCollectionItem: false\n    }\n  };\n  return PieChartTitle;\n}(nested_option_1.default);\n\nexports.PieChartTitle = PieChartTitle; // owners:\n// PieChartTitle\n\nvar PieChartTitleSubtitle =\n/** @class */\nfunction (_super) {\n  __extends(PieChartTitleSubtitle, _super);\n\n  function PieChartTitleSubtitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PieChartTitleSubtitle.OptionName = \"subtitle\";\n  PieChartTitleSubtitle.ExpectedChildren = {\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    }\n  };\n  return PieChartTitleSubtitle;\n}(nested_option_1.default);\n\nexports.PieChartTitleSubtitle = PieChartTitleSubtitle; // owners:\n// CommonSeriesSettings\n\nvar SelectionStyle =\n/** @class */\nfunction (_super) {\n  __extends(SelectionStyle, _super);\n\n  function SelectionStyle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SelectionStyle.OptionName = \"selectionStyle\";\n  SelectionStyle.ExpectedChildren = {\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    hatching: {\n      optionName: \"hatching\",\n      isCollectionItem: false\n    },\n    seriesBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    }\n  };\n  return SelectionStyle;\n}(nested_option_1.default);\n\nexports.SelectionStyle = SelectionStyle; // owners:\n// PieChart\n\nvar Series =\n/** @class */\nfunction (_super) {\n  __extends(Series, _super);\n\n  function Series() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Series.OptionName = \"series\";\n  Series.IsCollectionItem = true;\n  return Series;\n}(nested_option_1.default);\n\nexports.Series = Series; // owners:\n// CommonSeriesSettings\n// HoverStyle\n// Label\n// SelectionStyle\n\nvar SeriesBorder =\n/** @class */\nfunction (_super) {\n  __extends(SeriesBorder, _super);\n\n  function SeriesBorder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SeriesBorder.OptionName = \"border\";\n  return SeriesBorder;\n}(nested_option_1.default);\n\nexports.SeriesBorder = SeriesBorder; // owners:\n// PieChart\n\nvar SeriesTemplate =\n/** @class */\nfunction (_super) {\n  __extends(SeriesTemplate, _super);\n\n  function SeriesTemplate() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SeriesTemplate.OptionName = \"seriesTemplate\";\n  return SeriesTemplate;\n}(nested_option_1.default);\n\nexports.SeriesTemplate = SeriesTemplate; // owners:\n// Tooltip\n\nvar Shadow =\n/** @class */\nfunction (_super) {\n  __extends(Shadow, _super);\n\n  function Shadow() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Shadow.OptionName = \"shadow\";\n  return Shadow;\n}(nested_option_1.default);\n\nexports.Shadow = Shadow; // owners:\n// PieChart\n\nvar Size =\n/** @class */\nfunction (_super) {\n  __extends(Size, _super);\n\n  function Size() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Size.OptionName = \"size\";\n  return Size;\n}(nested_option_1.default);\n\nexports.Size = Size; // owners:\n// CommonSeriesSettings\n\nvar SmallValuesGrouping =\n/** @class */\nfunction (_super) {\n  __extends(SmallValuesGrouping, _super);\n\n  function SmallValuesGrouping() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SmallValuesGrouping.OptionName = \"smallValuesGrouping\";\n  return SmallValuesGrouping;\n}(nested_option_1.default);\n\nexports.SmallValuesGrouping = SmallValuesGrouping; // owners:\n// LegendTitle\n// PieChartTitle\n\nvar Subtitle =\n/** @class */\nfunction (_super) {\n  __extends(Subtitle, _super);\n\n  function Subtitle() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Subtitle.OptionName = \"subtitle\";\n  return Subtitle;\n}(nested_option_1.default);\n\nexports.Subtitle = Subtitle; // owners:\n// Legend\n// PieChart\n\nvar Title =\n/** @class */\nfunction (_super) {\n  __extends(Title, _super);\n\n  function Title() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Title.OptionName = \"title\";\n  return Title;\n}(nested_option_1.default);\n\nexports.Title = Title; // owners:\n// PieChart\n\nvar Tooltip =\n/** @class */\nfunction (_super) {\n  __extends(Tooltip, _super);\n\n  function Tooltip() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Tooltip.OptionName = \"tooltip\";\n  Tooltip.ExpectedChildren = {\n    argumentFormat: {\n      optionName: \"argumentFormat\",\n      isCollectionItem: false\n    },\n    border: {\n      optionName: \"border\",\n      isCollectionItem: false\n    },\n    font: {\n      optionName: \"font\",\n      isCollectionItem: false\n    },\n    format: {\n      optionName: \"format\",\n      isCollectionItem: false\n    },\n    shadow: {\n      optionName: \"shadow\",\n      isCollectionItem: false\n    },\n    tooltipBorder: {\n      optionName: \"border\",\n      isCollectionItem: false\n    }\n  };\n  Tooltip.TemplateProps = [{\n    tmplOption: \"contentTemplate\",\n    render: \"contentRender\",\n    component: \"contentComponent\",\n    keyFn: \"contentKeyFn\"\n  }];\n  return Tooltip;\n}(nested_option_1.default);\n\nexports.Tooltip = Tooltip; // owners:\n// Tooltip\n\nvar TooltipBorder =\n/** @class */\nfunction (_super) {\n  __extends(TooltipBorder, _super);\n\n  function TooltipBorder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TooltipBorder.OptionName = \"border\";\n  return TooltipBorder;\n}(nested_option_1.default);\n\nexports.TooltipBorder = TooltipBorder;\nexports.default = PieChart;","map":null,"metadata":{},"sourceType":"script"}