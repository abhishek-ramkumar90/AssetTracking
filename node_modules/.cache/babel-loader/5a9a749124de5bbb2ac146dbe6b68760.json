{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/ready_callbacks.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar domAdapter = require(\"../dom_adapter\");\n\nvar injector = require(\"./dependency_injector\");\n\nvar windowUtils = require(\"./window\");\n\nvar callOnce = require(\"./call_once\");\n\nvar callbacks = [];\n\nvar isReady = function () {\n  return \"complete\" === domAdapter.getReadyState() || \"loading\" !== domAdapter.getReadyState() && !domAdapter.getDocumentElement().doScroll;\n};\n\nvar subscribeReady = callOnce(function () {\n  var removeListener = domAdapter.listen(domAdapter.getDocument(), \"DOMContentLoaded\", function () {\n    readyCallbacks.fire();\n    removeListener();\n  });\n});\nvar readyCallbacks = {\n  add: function (callback) {\n    var hasWindow = windowUtils.hasWindow();\n\n    if (hasWindow && isReady()) {\n      callback();\n    } else {\n      callbacks.push(callback);\n      hasWindow && subscribeReady();\n    }\n  },\n  fire: function () {\n    callbacks.forEach(function (callback) {\n      return callback();\n    });\n    callbacks = [];\n  }\n};\nmodule.exports = injector(readyCallbacks);","map":null,"metadata":{},"sourceType":"script"}