{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 19.2.7\n * Build date: Thu Mar 26 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar elementPropNames = [\"style\", \"id\"];\nexports.elementPropNames = elementPropNames;\nvar classNamePropName = \"className\";\n\nfunction separateProps(props, defaultsProps, templateProps) {\n  templateProps = templateProps || [];\n  var defaults = {};\n  var options = {};\n  var templates = {};\n  var knownTemplates = {};\n  templateProps.forEach(function (value) {\n    knownTemplates[value.component] = true;\n    knownTemplates[value.render] = true;\n  });\n  Object.keys(props).forEach(function (key) {\n    var defaultOptionName = defaultsProps ? defaultsProps[key] : null;\n\n    if (isIgnoredProp(key)) {\n      return;\n    }\n\n    if (defaultOptionName) {\n      defaults[defaultOptionName] = props[key];\n      return;\n    }\n\n    if (knownTemplates[key]) {\n      templates[key] = props[key];\n      return;\n    }\n\n    options[key] = props[key];\n  });\n  return {\n    options: options,\n    defaults: defaults,\n    templates: templates\n  };\n}\n\nexports.separateProps = separateProps;\n\nfunction getClassName(props) {\n  return props[classNamePropName];\n}\n\nexports.getClassName = getClassName;\n\nfunction isIgnoredProp(name) {\n  return name === \"children\" || name === classNamePropName || elementPropNames.indexOf(name) > -1;\n}","map":null,"metadata":{},"sourceType":"script"}