{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/inflector.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar map = require(\"./iterator\").map;\n\nvar _normalize = function (text) {\n  if (void 0 === text || null === text) {\n    return \"\";\n  }\n\n  return String(text);\n};\n\nvar _upperCaseFirst = function (text) {\n  return _normalize(text).charAt(0).toUpperCase() + text.substr(1);\n};\n\nvar _chop = function (text) {\n  return _normalize(text).replace(/([a-z\\d])([A-Z])/g, \"$1 $2\").split(/[\\s_-]+/);\n};\n\nvar dasherize = function (text) {\n  return map(_chop(text), function (p) {\n    return p.toLowerCase();\n  }).join(\"-\");\n};\n\nvar underscore = function (text) {\n  return dasherize(text).replace(/-/g, \"_\");\n};\n\nvar camelize = function (text, upperFirst) {\n  return map(_chop(text), function (p, i) {\n    p = p.toLowerCase();\n\n    if (upperFirst || i > 0) {\n      p = _upperCaseFirst(p);\n    }\n\n    return p;\n  }).join(\"\");\n};\n\nvar humanize = function (text) {\n  return _upperCaseFirst(dasherize(text).replace(/-/g, \" \"));\n};\n\nvar titleize = function (text) {\n  return map(_chop(text), function (p) {\n    return _upperCaseFirst(p.toLowerCase());\n  }).join(\" \");\n};\n\nvar DIGIT_CHARS = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n\nvar captionize = function (name) {\n  var captionList = [];\n  var i;\n  var char;\n  var isPrevCharNewWord = false;\n  var isNewWord = false;\n\n  for (i = 0; i < name.length; i++) {\n    char = name.charAt(i);\n    isNewWord = char === char.toUpperCase() && \"-\" !== char && \")\" !== char && \"/\" !== char || char in DIGIT_CHARS;\n\n    if (\"_\" === char || \".\" === char) {\n      char = \" \";\n      isNewWord = true;\n    } else {\n      if (0 === i) {\n        char = char.toUpperCase();\n        isNewWord = true;\n      } else {\n        if (!isPrevCharNewWord && isNewWord) {\n          if (captionList.length > 0) {\n            captionList.push(\" \");\n          }\n        }\n      }\n    }\n\n    captionList.push(char);\n    isPrevCharNewWord = isNewWord;\n  }\n\n  return captionList.join(\"\");\n};\n\nexports.dasherize = dasherize;\nexports.camelize = camelize;\nexports.humanize = humanize;\nexports.titleize = titleize;\nexports.underscore = underscore;\nexports.captionize = captionize;","map":null,"metadata":{},"sourceType":"script"}