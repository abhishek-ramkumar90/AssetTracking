{"ast":null,"code":"/**\r\n * DevExtreme (events/core/event_registrator.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar each = require(\"../../core/utils/iterator\").each;\n\nvar callbacks = require(\"./event_registrator_callbacks\");\n\nvar registerEvent = function (name, eventObject) {\n  var strategy = {};\n\n  if (\"noBubble\" in eventObject) {\n    strategy.noBubble = eventObject.noBubble;\n  }\n\n  if (\"bindType\" in eventObject) {\n    strategy.bindType = eventObject.bindType;\n  }\n\n  if (\"delegateType\" in eventObject) {\n    strategy.delegateType = eventObject.delegateType;\n  }\n\n  each([\"setup\", \"teardown\", \"add\", \"remove\", \"trigger\", \"handle\", \"_default\", \"dispose\"], function (_, methodName) {\n    if (!eventObject[methodName]) {\n      return;\n    }\n\n    strategy[methodName] = function () {\n      var args = [].slice.call(arguments);\n      args.unshift(this);\n      return eventObject[methodName].apply(eventObject, args);\n    };\n  });\n  callbacks.fire(name, strategy);\n};\n\nregisterEvent.callbacks = callbacks;\nmodule.exports = registerEvent;","map":null,"metadata":{},"sourceType":"script"}