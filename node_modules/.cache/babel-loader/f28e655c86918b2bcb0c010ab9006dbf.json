{"ast":null,"code":"/**\r\n * DevExtreme (core/dom_component.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _events_engine = require(\"../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _window = require(\"../core/utils/window\");\n\nvar _window2 = _interopRequireDefault(_window);\n\nvar _extend = require(\"./utils/extend\");\n\nvar _config = require(\"./config\");\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _errors = require(\"./errors\");\n\nvar _errors2 = _interopRequireDefault(_errors);\n\nvar _dom = require(\"../core/utils/dom\");\n\nvar _resize_callbacks = require(\"../core/utils/resize_callbacks\");\n\nvar _resize_callbacks2 = _interopRequireDefault(_resize_callbacks);\n\nvar _common = require(\"./utils/common\");\n\nvar _common2 = _interopRequireDefault(_common);\n\nvar _iterator = require(\"./utils/iterator\");\n\nvar _type = require(\"./utils/type\");\n\nvar _array = require(\"./utils/array\");\n\nvar _public_component = require(\"./utils/public_component\");\n\nvar _public_component2 = _interopRequireDefault(_public_component);\n\nvar _element_data = require(\"./element_data\");\n\nvar _element_data2 = _interopRequireDefault(_element_data);\n\nvar _component = require(\"./component\");\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar abstract = _component2.default.abstract;\nvar RTL_DIRECTION_CLASS = \"dx-rtl\";\nvar VISIBILITY_CHANGE_CLASS = \"dx-visibility-change-handler\";\nvar VISIBILITY_CHANGE_EVENTNAMESPACE = \"VisibilityChange\";\n\nvar DOMComponent = _component2.default.inherit({\n  _getDefaultOptions: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      width: void 0,\n      height: void 0,\n      rtlEnabled: (0, _config2.default)().rtlEnabled,\n      elementAttr: {},\n      disabled: false,\n      integrationOptions: {}\n    });\n  },\n  ctor: function (element, options) {\n    this._createElement(element);\n\n    _public_component2.default.attachInstanceToElement(this._$element, this, this._dispose);\n\n    this.callBase(options);\n  },\n  _createElement: function (element) {\n    this._$element = (0, _renderer2.default)(element);\n  },\n  _getSynchronizableOptionsForCreateComponent: function () {\n    return [\"rtlEnabled\", \"disabled\", \"templatesRenderAsynchronously\"];\n  },\n  _visibilityChanged: abstract,\n  _dimensionChanged: abstract,\n  _init: function () {\n    this.callBase();\n\n    this._attachWindowResizeCallback();\n  },\n  _setOptionsByDevice: function (instanceCustomRules) {\n    this.callBase([].concat(this.constructor._classCustomRules || [], instanceCustomRules || []));\n  },\n  _isInitialOptionValue: function (name) {\n    var isCustomOption = this.constructor._classCustomRules && Object.prototype.hasOwnProperty.call(this._convertRulesToOptions(this.constructor._classCustomRules), name);\n    return !isCustomOption && this.callBase(name);\n  },\n  _attachWindowResizeCallback: function () {\n    if (this._isDimensionChangeSupported()) {\n      var windowResizeCallBack = this._windowResizeCallBack = this._dimensionChanged.bind(this);\n\n      _resize_callbacks2.default.add(windowResizeCallBack);\n    }\n  },\n  _isDimensionChangeSupported: function () {\n    return this._dimensionChanged !== abstract;\n  },\n  _renderComponent: function () {\n    this._initMarkup();\n\n    if (_window2.default.hasWindow()) {\n      this._render();\n    }\n  },\n  _initMarkup: function () {\n    this._renderElementAttributes();\n\n    this._toggleRTLDirection(this.option(\"rtlEnabled\"));\n\n    this._renderVisibilityChange();\n\n    this._renderDimensions();\n  },\n  _render: function () {\n    this._attachVisibilityChangeHandlers();\n  },\n  _renderElementAttributes: function () {\n    var attributes = (0, _extend.extend)({}, this.option(\"elementAttr\"));\n    var classNames = attributes.class;\n    delete attributes.class;\n    this.$element().attr(attributes).addClass(classNames);\n  },\n  _renderVisibilityChange: function () {\n    if (this._isDimensionChangeSupported()) {\n      this._attachDimensionChangeHandlers();\n    }\n\n    if (!this._isVisibilityChangeSupported()) {\n      return;\n    }\n\n    this.$element().addClass(VISIBILITY_CHANGE_CLASS);\n  },\n  _renderDimensions: function () {\n    var $element = this.$element();\n    var element = $element.get(0);\n\n    var width = this._getOptionValue(\"width\", element);\n\n    var height = this._getOptionValue(\"height\", element);\n\n    if (this._isCssUpdateRequired(element, height, width)) {\n      $element.css({\n        width: null === width ? \"\" : width,\n        height: null === height ? \"\" : height\n      });\n    }\n  },\n  _isCssUpdateRequired: function (element, height, width) {\n    return !!((0, _type.isDefined)(width) || (0, _type.isDefined)(height) || element.style.width || element.style.height);\n  },\n  _attachDimensionChangeHandlers: function () {\n    var that = this;\n    var resizeEventName = \"dxresize.\" + this.NAME + VISIBILITY_CHANGE_EVENTNAMESPACE;\n\n    _events_engine2.default.off(that.$element(), resizeEventName);\n\n    _events_engine2.default.on(that.$element(), resizeEventName, function () {\n      that._dimensionChanged();\n    });\n  },\n  _attachVisibilityChangeHandlers: function () {\n    if (!this._isVisibilityChangeSupported()) {\n      return;\n    }\n\n    var that = this;\n    var hidingEventName = \"dxhiding.\" + this.NAME + VISIBILITY_CHANGE_EVENTNAMESPACE;\n    var shownEventName = \"dxshown.\" + this.NAME + VISIBILITY_CHANGE_EVENTNAMESPACE;\n    that._isHidden = !that._isVisible();\n\n    _events_engine2.default.off(that.$element(), hidingEventName);\n\n    _events_engine2.default.on(that.$element(), hidingEventName, function () {\n      that._checkVisibilityChanged(\"hiding\");\n    });\n\n    _events_engine2.default.off(that.$element(), shownEventName);\n\n    _events_engine2.default.on(that.$element(), shownEventName, function () {\n      that._checkVisibilityChanged(\"shown\");\n    });\n  },\n  _isVisible: function () {\n    return this.$element().is(\":visible\");\n  },\n  _checkVisibilityChanged: function (event) {\n    if (\"hiding\" === event && this._isVisible() && !this._isHidden) {\n      this._visibilityChanged(false);\n\n      this._isHidden = true;\n    } else {\n      if (\"shown\" === event && this._isVisible() && this._isHidden) {\n        this._isHidden = false;\n\n        this._visibilityChanged(true);\n      }\n    }\n  },\n  _isVisibilityChangeSupported: function () {\n    return this._visibilityChanged !== abstract && _window2.default.hasWindow();\n  },\n  _clean: _common2.default.noop,\n  _modelByElement: function () {\n    var modelByElement = this.option(\"modelByElement\") || _common2.default.noop;\n\n    return modelByElement(this.$element());\n  },\n  _invalidate: function () {\n    if (!this._updateLockCount) {\n      throw _errors2.default.Error(\"E0007\");\n    }\n\n    this._requireRefresh = true;\n  },\n  _refresh: function () {\n    this._clean();\n\n    this._renderComponent();\n  },\n  _dispose: function () {\n    this.callBase();\n\n    this._clean();\n\n    this._detachWindowResizeCallback();\n  },\n  _detachWindowResizeCallback: function () {\n    if (this._isDimensionChangeSupported()) {\n      _resize_callbacks2.default.remove(this._windowResizeCallBack);\n    }\n  },\n  _toggleRTLDirection: function (rtl) {\n    this.$element().toggleClass(RTL_DIRECTION_CLASS, rtl);\n  },\n  _createComponent: function (element, component, config) {\n    var _this = this;\n\n    var that = this;\n    config = config || {};\n\n    var synchronizableOptions = _common2.default.grep(this._getSynchronizableOptionsForCreateComponent(), function (value) {\n      return !(value in config);\n    });\n\n    var nestedComponentOptions = that.option(\"nestedComponentOptions\") || _common2.default.noop;\n\n    var nestedComponentConfig = (0, _extend.extend)({\n      integrationOptions: this.option(\"integrationOptions\")\n    }, nestedComponentOptions(this));\n    synchronizableOptions.forEach(function (optionName) {\n      nestedComponentConfig[optionName] = _this.option(optionName);\n    });\n\n    that._extendConfig(config, nestedComponentConfig);\n\n    var instance;\n\n    if ((0, _type.isString)(component)) {\n      var $element = (0, _renderer2.default)(element)[component](config);\n      instance = $element[component](\"instance\");\n    } else {\n      if (element) {\n        instance = component.getInstance(element);\n\n        if (instance) {\n          instance.option(config);\n        } else {\n          instance = new component(element, config);\n        }\n      }\n    }\n\n    if (instance) {\n      var optionChangedHandler = function (args) {\n        if ((0, _array.inArray)(args.name, synchronizableOptions) >= 0) {\n          instance.option(args.name, args.value);\n        }\n      };\n\n      that.on(\"optionChanged\", optionChangedHandler);\n      instance.on(\"disposing\", function () {\n        that.off(\"optionChanged\", optionChangedHandler);\n      });\n    }\n\n    return instance;\n  },\n  _extendConfig: function (config, extendConfig) {\n    (0, _iterator.each)(extendConfig, function (key, value) {\n      config[key] = Object.prototype.hasOwnProperty.call(config, key) ? config[key] : value;\n    });\n  },\n  _defaultActionConfig: function () {\n    return (0, _extend.extend)(this.callBase(), {\n      context: this._modelByElement(this.$element())\n    });\n  },\n  _defaultActionArgs: function () {\n    var model = this._modelByElement(this.$element());\n\n    return (0, _extend.extend)(this.callBase(), {\n      element: this.element(),\n      model: model\n    });\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"width\":\n      case \"height\":\n        this._renderDimensions();\n\n        break;\n\n      case \"rtlEnabled\":\n        this._invalidate();\n\n        break;\n\n      case \"elementAttr\":\n        this._renderElementAttributes();\n\n        break;\n\n      case \"disabled\":\n      case \"integrationOptions\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _removeAttributes: function (element) {\n    var i = element.attributes.length - 1;\n\n    for (; i >= 0; i--) {\n      var attribute = element.attributes[i];\n\n      if (!attribute) {\n        return;\n      }\n\n      var attributeName = attribute.name;\n\n      if (0 === attributeName.indexOf(\"aria-\") || attributeName.indexOf(\"dx-\") !== -1 || \"role\" === attributeName || \"style\" === attributeName || \"tabindex\" === attributeName) {\n        element.removeAttribute(attributeName);\n      }\n    }\n  },\n  _removeClasses: function (element) {\n    var classes = element.className.split(\" \").filter(function (cssClass) {\n      return 0 !== cssClass.lastIndexOf(\"dx-\", 0);\n    });\n    element.className = classes.join(\" \");\n  },\n  endUpdate: function () {\n    var requireRender = !this._initializing && !this._initialized;\n    this.callBase.apply(this, arguments);\n\n    if (!this._updateLockCount) {\n      if (requireRender) {\n        this._renderComponent();\n      } else {\n        if (this._requireRefresh) {\n          this._requireRefresh = false;\n\n          this._refresh();\n        }\n      }\n    }\n  },\n  $element: function () {\n    return this._$element;\n  },\n  element: function () {\n    return (0, _dom.getPublicElement)(this.$element());\n  },\n  dispose: function () {\n    var element = this.$element().get(0);\n\n    _element_data2.default.cleanDataRecursive(element, true);\n\n    element.textContent = \"\";\n\n    this._removeAttributes(element);\n\n    this._removeClasses(element);\n  },\n  resetOption: function (optionName) {\n    this.callBase(optionName);\n\n    if ((\"width\" === optionName || \"height\" === optionName) && !(0, _type.isDefined)(this.initialOption(optionName))) {\n      this.$element().css(optionName, \"\");\n    }\n  }\n});\n\nDOMComponent.getInstance = function (element) {\n  return _public_component2.default.getInstanceByElement((0, _renderer2.default)(element), this);\n};\n\nDOMComponent.defaultOptions = function (rule) {\n  this._classCustomRules = this._classCustomRules || [];\n\n  this._classCustomRules.push(rule);\n};\n\nmodule.exports = DOMComponent;\nmodule.exports.default = module.exports;","map":null,"metadata":{},"sourceType":"script"}