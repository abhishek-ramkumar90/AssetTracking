{"ast":null,"code":"/**\r\n * DevExtreme (viz/core/base_theme_manager.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar Class = require(\"../../core/class\");\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar typeUtils = require(\"../../core/utils/type\");\n\nvar each = require(\"../../core/utils/iterator\").each;\n\nvar paletteModule = require(\"../palette\");\n\nvar _isString = typeUtils.isString;\n\nvar _parseScalar = require(\"./utils\").parseScalar;\n\nvar themeModule = require(\"../themes\");\n\nvar _getTheme = themeModule.getTheme;\nvar _addCacheItem = themeModule.addCacheItem;\nvar _removeCacheItem = themeModule.removeCacheItem;\nvar _extend = extend;\nvar _each = each;\n\nrequire(\"./themes/generic.light\");\n\nrequire(\"./themes/generic.dark\");\n\nrequire(\"./themes/generic.contrast\");\n\nrequire(\"./themes/generic.carmine\");\n\nrequire(\"./themes/generic.darkmoon\");\n\nrequire(\"./themes/generic.softblue\");\n\nrequire(\"./themes/generic.darkviolet\");\n\nrequire(\"./themes/generic.greenmist\");\n\nrequire(\"./themes/material\");\n\nrequire(\"./themes/ios\");\n\nfunction getThemePart(theme, path) {\n  var _theme = theme;\n  path && _each(path.split(\".\"), function (_, pathItem) {\n    return _theme = _theme[pathItem];\n  });\n  return _theme;\n}\n\nexports.BaseThemeManager = Class.inherit({\n  ctor: function (options) {\n    this._themeSection = options.themeSection;\n    this._fontFields = options.fontFields || [];\n\n    _addCacheItem(this);\n  },\n  dispose: function () {\n    var that = this;\n\n    _removeCacheItem(that);\n\n    that._callback = that._theme = that._font = null;\n    return that;\n  },\n  setCallback: function (callback) {\n    this._callback = callback;\n    return this;\n  },\n  setTheme: function (theme, rtl) {\n    this._current = theme;\n    this._rtl = rtl;\n    return this.refresh();\n  },\n  refresh: function () {\n    var that = this;\n    var current = that._current || {};\n\n    var theme = _getTheme(current.name || current);\n\n    that._themeName = theme.name;\n    that._defaultPalette = theme.defaultPalette;\n    that._font = _extend({}, theme.font, current.font);\n    that._themeSection && _each(that._themeSection.split(\".\"), function (_, path) {\n      theme = _extend(true, {}, theme[path]);\n    });\n    that._theme = _extend(true, {}, theme, _isString(current) ? {} : current);\n\n    that._initializeTheme();\n\n    if (_parseScalar(that._rtl, that._theme.rtlEnabled)) {\n      _extend(true, that._theme, that._theme._rtl);\n    }\n\n    that._callback();\n\n    return that;\n  },\n  theme: function (path) {\n    return getThemePart(this._theme, path);\n  },\n  themeName: function () {\n    return this._themeName;\n  },\n  createPalette: function (palette, options) {\n    return paletteModule.createPalette(palette, options, this._defaultPalette);\n  },\n  createDiscretePalette: function (palette, count) {\n    return paletteModule.getDiscretePalette(palette, count, this._defaultPalette);\n  },\n  createGradientPalette: function (palette) {\n    return paletteModule.getGradientPalette(palette, this._defaultPalette);\n  },\n  getAccentColor: function (palette) {\n    return paletteModule.getAccentColor(palette, this._defaultPalette);\n  },\n  _initializeTheme: function () {\n    var that = this;\n\n    _each(that._fontFields || [], function (_, path) {\n      that._initializeFont(getThemePart(that._theme, path));\n    });\n  },\n  _initializeFont: function (font) {\n    _extend(font, this._font, _extend({}, font));\n  }\n});","map":null,"metadata":{},"sourceType":"script"}