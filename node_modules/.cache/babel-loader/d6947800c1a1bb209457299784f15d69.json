{"ast":null,"code":"/**\r\n * DevExtreme (data/store_helper.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar grep = require(\"../core/utils/common\").grep;\n\nvar extend = require(\"../core/utils/extend\").extend;\n\nvar each = require(\"../core/utils/iterator\").each;\n\nvar arrayQuery = require(\"./array_query\");\n\nvar normalizeSortingInfo = require(\"./utils\").normalizeSortingInfo;\n\nfunction multiLevelGroup(query, groupInfo) {\n  query = query.groupBy(groupInfo[0].selector);\n\n  if (groupInfo.length > 1) {\n    query = query.select(function (g) {\n      return extend({}, g, {\n        items: multiLevelGroup(arrayQuery(g.items), groupInfo.slice(1)).toArray()\n      });\n    });\n  }\n\n  return query;\n}\n\nfunction arrangeSortingInfo(groupInfo, sortInfo) {\n  var filteredGroup = [];\n  each(groupInfo, function (_, group) {\n    var collision = grep(sortInfo, function (sort) {\n      return group.selector === sort.selector;\n    });\n\n    if (collision.length < 1) {\n      filteredGroup.push(group);\n    }\n  });\n  return filteredGroup.concat(sortInfo);\n}\n\nfunction queryByOptions(query, options, isCountQuery) {\n  options = options || {};\n  var filter = options.filter;\n\n  if (filter) {\n    query = query.filter(filter);\n  }\n\n  if (isCountQuery) {\n    return query;\n  }\n\n  var sort = options.sort;\n  var select = options.select;\n  var group = options.group;\n  var skip = options.skip;\n  var take = options.take;\n\n  if (group) {\n    group = normalizeSortingInfo(group);\n    group.keepInitialKeyOrder = !!options.group.keepInitialKeyOrder;\n  }\n\n  if (sort || group) {\n    sort = normalizeSortingInfo(sort || []);\n\n    if (group && !group.keepInitialKeyOrder) {\n      sort = arrangeSortingInfo(group, sort);\n    }\n\n    each(sort, function (index) {\n      query = query[index ? \"thenBy\" : \"sortBy\"](this.selector, this.desc, this.compare);\n    });\n  }\n\n  if (select) {\n    query = query.select(select);\n  }\n\n  if (group) {\n    query = multiLevelGroup(query, group);\n  }\n\n  if (take || skip) {\n    query = query.slice(skip || 0, take);\n  }\n\n  return query;\n}\n\nmodule.exports = {\n  multiLevelGroup: multiLevelGroup,\n  arrangeSortingInfo: arrangeSortingInfo,\n  queryByOptions: queryByOptions\n};","map":null,"metadata":{},"sourceType":"script"}