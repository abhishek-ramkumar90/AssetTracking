{"ast":null,"code":"/**\r\n * DevExtreme (events/core/wheel.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _renderer = require(\"../../core/renderer\");\n\nvar _renderer2 = _interopRequireDefault(_renderer);\n\nvar _events_engine = require(\"../../events/core/events_engine\");\n\nvar _events_engine2 = _interopRequireDefault(_events_engine);\n\nvar _event_registrator = require(\"./event_registrator\");\n\nvar _event_registrator2 = _interopRequireDefault(_event_registrator);\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar EVENT_NAME = \"dxmousewheel\";\nvar EVENT_NAMESPACE = \"dxWheel\";\nvar NATIVE_EVENT_NAME = \"wheel\";\nvar PIXEL_MODE = 0;\nvar DELTA_MUTLIPLIER = 30;\nvar wheel = {\n  setup: function (element) {\n    var $element = (0, _renderer2.default)(element);\n\n    _events_engine2.default.on($element, (0, _utils.addNamespace)(NATIVE_EVENT_NAME, EVENT_NAMESPACE), wheel._wheelHandler.bind(wheel));\n  },\n  teardown: function (element) {\n    _events_engine2.default.off(element, \".\".concat(EVENT_NAMESPACE));\n  },\n  _wheelHandler: function (e) {\n    var _e$originalEvent = e.originalEvent,\n        deltaMode = _e$originalEvent.deltaMode,\n        deltaY = _e$originalEvent.deltaY,\n        deltaX = _e$originalEvent.deltaX,\n        deltaZ = _e$originalEvent.deltaZ;\n    (0, _utils.fireEvent)({\n      type: EVENT_NAME,\n      originalEvent: e,\n      delta: this._normalizeDelta(deltaY, deltaMode),\n      deltaX: deltaX,\n      deltaY: deltaY,\n      deltaZ: deltaZ,\n      deltaMode: deltaMode,\n      pointerType: \"mouse\"\n    });\n    e.stopPropagation();\n  },\n  _normalizeDelta: function (delta) {\n    var deltaMode = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : PIXEL_MODE;\n\n    if (deltaMode === PIXEL_MODE) {\n      return -delta;\n    } else {\n      return -DELTA_MUTLIPLIER * delta;\n    }\n  }\n};\n(0, _event_registrator2.default)(EVENT_NAME, wheel);\nexports.name = EVENT_NAME;","map":null,"metadata":{},"sourceType":"script"}