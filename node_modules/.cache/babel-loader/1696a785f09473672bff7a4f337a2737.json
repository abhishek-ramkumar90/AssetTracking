{"ast":null,"code":"/**\r\n * DevExtreme (ui/widget/selectors.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\");\n\nvar domAdapter = require(\"../../core/dom_adapter\");\n\nvar _focusable = function (element, tabIndex) {\n  if (!visible(element)) {\n    return false;\n  }\n\n  var nodeName = element.nodeName.toLowerCase();\n  var isTabIndexNotNaN = !isNaN(tabIndex);\n  var isDisabled = element.disabled;\n  var isDefaultFocus = /^(input|select|textarea|button|object|iframe)$/.test(nodeName);\n  var isHyperlink = \"a\" === nodeName;\n  var isFocusable = true;\n  var isContentEditable = element.isContentEditable;\n\n  if (isDefaultFocus || isContentEditable) {\n    isFocusable = !isDisabled;\n  } else {\n    if (isHyperlink) {\n      isFocusable = element.href || isTabIndexNotNaN;\n    } else {\n      isFocusable = isTabIndexNotNaN;\n    }\n  }\n\n  return isFocusable;\n};\n\nvar visible = function (element) {\n  var $element = $(element);\n  return $element.is(\":visible\") && \"hidden\" !== $element.css(\"visibility\") && \"hidden\" !== $element.parents().css(\"visibility\");\n};\n\nmodule.exports = {\n  focusable: function (index, element) {\n    return _focusable(element, $(element).attr(\"tabIndex\"));\n  },\n  tabbable: function (index, element) {\n    var tabIndex = $(element).attr(\"tabIndex\");\n    return (isNaN(tabIndex) || tabIndex >= 0) && _focusable(element, tabIndex);\n  },\n  focused: function ($element) {\n    var element = $($element).get(0);\n    return domAdapter.getActiveElement() === element;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}