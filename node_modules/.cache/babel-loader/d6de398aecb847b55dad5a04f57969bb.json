{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/type.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (\"function\" === typeof Symbol && \"symbol\" === typeof Symbol.iterator) {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && \"function\" === typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar types = {\n  \"[object Array]\": \"array\",\n  \"[object Date]\": \"date\",\n  \"[object Object]\": \"object\",\n  \"[object String]\": \"string\",\n  \"[object Null]\": \"null\"\n};\n\nvar type = function (object) {\n  var typeOfObject = Object.prototype.toString.call(object);\n  return \"object\" === _typeof(object) ? types[typeOfObject] || \"object\" : _typeof(object);\n};\n\nvar isBoolean = function (object) {\n  return \"boolean\" === typeof object;\n};\n\nvar isExponential = function (value) {\n  return isNumeric(value) && value.toString().indexOf(\"e\") !== -1;\n};\n\nvar isDate = function (object) {\n  return \"date\" === type(object);\n};\n\nvar isDefined = function (object) {\n  return null !== object && void 0 !== object;\n};\n\nvar isFunction = function (object) {\n  return \"function\" === typeof object;\n};\n\nvar isString = function (object) {\n  return \"string\" === typeof object;\n};\n\nvar isNumeric = function (object) {\n  return \"number\" === typeof object && isFinite(object) || !isNaN(object - parseFloat(object));\n};\n\nvar isObject = function (object) {\n  return \"object\" === type(object);\n};\n\nvar isEmptyObject = function (object) {\n  var property;\n\n  for (property in object) {\n    return false;\n  }\n\n  return true;\n};\n\nvar isPlainObject = function (object) {\n  if (!object || \"[object Object]\" !== Object.prototype.toString.call(object)) {\n    return false;\n  }\n\n  var proto = Object.getPrototypeOf(object);\n  var ctor = Object.hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\n  return \"function\" === typeof ctor && Object.toString.call(ctor) === Object.toString.call(Object);\n};\n\nvar isPrimitive = function (value) {\n  return [\"object\", \"array\", \"function\"].indexOf(type(value)) === -1;\n};\n\nvar isWindow = function (object) {\n  return null != object && object === object.window;\n};\n\nvar isRenderer = function (object) {\n  return !!(object.jquery || object.dxRenderer);\n};\n\nvar isPromise = function (object) {\n  return object && isFunction(object.then);\n};\n\nvar isDeferred = function (object) {\n  return object && isFunction(object.done) && isFunction(object.fail);\n};\n\nexports.isBoolean = isBoolean;\nexports.isExponential = isExponential;\nexports.isDate = isDate;\nexports.isDefined = isDefined;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isNumeric = isNumeric;\nexports.isObject = isObject;\nexports.isEmptyObject = isEmptyObject;\nexports.isPlainObject = isPlainObject;\nexports.isPrimitive = isPrimitive;\nexports.isWindow = isWindow;\nexports.isRenderer = isRenderer;\nexports.isPromise = isPromise;\nexports.isDeferred = isDeferred;\nexports.type = type;","map":null,"metadata":{},"sourceType":"script"}