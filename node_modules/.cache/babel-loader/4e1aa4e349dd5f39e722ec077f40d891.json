{"ast":null,"code":"/**\r\n * DevExtreme (viz/translators/translator1d.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _Number = Number;\n\nfunction Translator1D() {\n  this.setDomain(arguments[0], arguments[1]).setCodomain(arguments[2], arguments[3]);\n}\n\nTranslator1D.prototype = {\n  constructor: Translator1D,\n  setDomain: function (domain1, domain2) {\n    var that = this;\n    that._domain1 = _Number(domain1);\n    that._domain2 = _Number(domain2);\n    that._domainDelta = that._domain2 - that._domain1;\n    return that;\n  },\n  setCodomain: function (codomain1, codomain2) {\n    var that = this;\n    that._codomain1 = _Number(codomain1);\n    that._codomain2 = _Number(codomain2);\n    that._codomainDelta = that._codomain2 - that._codomain1;\n    return that;\n  },\n  getDomain: function () {\n    return [this._domain1, this._domain2];\n  },\n  getCodomain: function () {\n    return [this._codomain1, this._codomain2];\n  },\n  getDomainStart: function () {\n    return this._domain1;\n  },\n  getDomainEnd: function () {\n    return this._domain2;\n  },\n  getCodomainStart: function () {\n    return this._codomain1;\n  },\n  getCodomainEnd: function () {\n    return this._codomain2;\n  },\n  getDomainRange: function () {\n    return this._domainDelta;\n  },\n  getCodomainRange: function () {\n    return this._codomainDelta;\n  },\n  translate: function (value) {\n    var ratio = (_Number(value) - this._domain1) / this._domainDelta;\n\n    return 0 <= ratio && ratio <= 1 ? this._codomain1 + ratio * this._codomainDelta : NaN;\n  },\n  adjust: function (value) {\n    var ratio = (_Number(value) - this._domain1) / this._domainDelta;\n\n    var result = NaN;\n\n    if (ratio < 0) {\n      result = this._domain1;\n    } else {\n      if (ratio > 1) {\n        result = this._domain2;\n      } else {\n        if (0 <= ratio && ratio <= 1) {\n          result = _Number(value);\n        }\n      }\n    }\n\n    return result;\n  }\n};\nexports.Translator1D = Translator1D;","map":null,"metadata":{},"sourceType":"script"}