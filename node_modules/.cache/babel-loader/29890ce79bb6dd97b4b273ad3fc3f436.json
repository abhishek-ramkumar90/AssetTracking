{"ast":null,"code":"/**\r\n * DevExtreme (viz/series/points/stock_point.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar extend = require(\"../../../core/utils/extend\").extend;\n\nvar isNumeric = require(\"../../../core/utils/type\").isNumeric;\n\nvar candlestickPoint = require(\"./candlestick_point\");\n\nvar _extend = extend;\nvar _isNumeric = isNumeric;\nmodule.exports = _extend({}, candlestickPoint, {\n  _getPoints: function () {\n    var that = this;\n    var createPoint = that._options.rotated ? function (x, y) {\n      return [y, x];\n    } : function (x, y) {\n      return [x, y];\n    };\n\n    var openYExist = _isNumeric(that.openY);\n\n    var closeYExist = _isNumeric(that.closeY);\n\n    var x = that.x;\n    var width = that.width;\n    var points;\n    points = [].concat(createPoint(x, that.highY));\n    openYExist && (points = points.concat(createPoint(x, that.openY)));\n    openYExist && (points = points.concat(createPoint(x - width / 2, that.openY)));\n    openYExist && (points = points.concat(createPoint(x, that.openY)));\n    closeYExist && (points = points.concat(createPoint(x, that.closeY)));\n    closeYExist && (points = points.concat(createPoint(x + width / 2, that.closeY)));\n    closeYExist && (points = points.concat(createPoint(x, that.closeY)));\n    points = points.concat(createPoint(x, that.lowY));\n    return points;\n  },\n  _drawMarkerInGroup: function (group, attributes, renderer) {\n    this.graphic = renderer.path(this._getPoints(), \"line\").attr({\n      \"stroke-linecap\": \"square\"\n    }).attr(attributes).data({\n      \"chart-data-point\": this\n    }).sharp().append(group);\n  },\n  _getMinTrackerWidth: function () {\n    var width = 2 + this._styles.normal[\"stroke-width\"];\n    return width + width % 2;\n  }\n});","map":null,"metadata":{},"sourceType":"script"}