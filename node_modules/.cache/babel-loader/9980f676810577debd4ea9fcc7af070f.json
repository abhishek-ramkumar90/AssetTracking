{"ast":null,"code":"/**\r\n * DevExtreme (events/pointer/touch.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar devices = require(\"../../core/devices\");\n\nvar extend = require(\"../../core/utils/extend\").extend;\n\nvar each = require(\"../../core/utils/iterator\").each;\n\nvar BaseStrategy = require(\"./base\");\n\nvar eventMap = {\n  dxpointerdown: \"touchstart\",\n  dxpointermove: \"touchmove\",\n  dxpointerup: \"touchend\",\n  dxpointercancel: \"touchcancel\",\n  dxpointerover: \"\",\n  dxpointerout: \"\",\n  dxpointerenter: \"\",\n  dxpointerleave: \"\"\n};\n\nvar normalizeTouchEvent = function (e) {\n  var pointers = [];\n  each(e.touches, function (_, touch) {\n    pointers.push(extend({\n      pointerId: touch.identifier\n    }, touch));\n  });\n  return {\n    pointers: pointers,\n    pointerId: e.changedTouches[0].identifier\n  };\n};\n\nvar skipTouchWithSameIdentifier = function (pointerEvent) {\n  return \"ios\" === devices.real().platform && (\"dxpointerdown\" === pointerEvent || \"dxpointerup\" === pointerEvent);\n};\n\nvar TouchStrategy = BaseStrategy.inherit({\n  ctor: function () {\n    this.callBase.apply(this, arguments);\n    this._pointerId = 0;\n  },\n  _handler: function (e) {\n    if (skipTouchWithSameIdentifier(this._eventName)) {\n      var touch = e.changedTouches[0];\n\n      if (this._pointerId === touch.identifier && 0 !== this._pointerId) {\n        return;\n      }\n\n      this._pointerId = touch.identifier;\n    }\n\n    return this.callBase.apply(this, arguments);\n  },\n  _fireEvent: function (args) {\n    return this.callBase(extend(normalizeTouchEvent(args.originalEvent), args));\n  }\n});\nTouchStrategy.map = eventMap;\nTouchStrategy.normalize = normalizeTouchEvent;\nmodule.exports = TouchStrategy;","map":null,"metadata":{},"sourceType":"script"}