{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/public_component.js)\r\n * Version: 19.2.7\r\n * Build date: Thu Mar 26 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar dataUtils = require(\"../../core/element_data\");\n\nvar eventsEngine = require(\"../../events/core/events_engine\");\n\nvar WeakMap = require(\"../polyfills/weak_map\");\n\nvar isDefined = require(\"./type\").isDefined;\n\nvar removeEvent = require(\"../remove_event\");\n\nvar COMPONENT_NAMES_DATA_KEY = \"dxComponents\";\nvar ANONYMOUS_COMPONENT_DATA_KEY = \"dxPrivateComponent\";\nvar componentNames = new WeakMap();\nvar nextAnonymousComponent = 0;\n\nvar getName = exports.name = function (componentClass, newName) {\n  if (isDefined(newName)) {\n    componentNames.set(componentClass, newName);\n    return;\n  }\n\n  if (!componentNames.has(componentClass)) {\n    var generatedName = ANONYMOUS_COMPONENT_DATA_KEY + nextAnonymousComponent++;\n    componentNames.set(componentClass, generatedName);\n    return generatedName;\n  }\n\n  return componentNames.get(componentClass);\n};\n\nexports.attachInstanceToElement = function ($element, componentInstance, disposeFn) {\n  var data = dataUtils.data($element.get(0));\n  var name = getName(componentInstance.constructor);\n  data[name] = componentInstance;\n\n  if (disposeFn) {\n    eventsEngine.one($element, removeEvent, function () {\n      disposeFn.call(componentInstance);\n    });\n  }\n\n  if (!data[COMPONENT_NAMES_DATA_KEY]) {\n    data[COMPONENT_NAMES_DATA_KEY] = [];\n  }\n\n  data[COMPONENT_NAMES_DATA_KEY].push(name);\n};\n\nexports.getInstanceByElement = function ($element, componentClass) {\n  var name = getName(componentClass);\n  return dataUtils.data($element.get(0), name);\n};","map":null,"metadata":{},"sourceType":"script"}